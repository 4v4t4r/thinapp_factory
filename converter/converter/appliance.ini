#
# converter - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
# Turn this off to disable debug behavior.
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Spawning
host = 127.0.0.1
port = 5000

[app:main]
use = egg:converter
full_stack = true
static_files = true

runtimes.url = http://localhost:8080/mm/runtimes

# Note: We rely on the init script to pass netbios.name as a property
# on the command line, as well as smb.user, smb.password, and
# storage.system.path.
storage.internal.share = \\%(netbios.name)s\packages
storage.internal.path = %(storage.system.path)s/packages
storage.internal.user = %(smb.user)s
storage.internal.password = %(smb.password)s
# Use the current IP address of the VM. This should be defined by the
# init script, just like netbios.name.

# Base url for all mounted datastores to be accessible via http - bad for security!
storage.base_url = http://%(ip)s/storage/
storage.internal.base_url = %(storage.base_url)sinternal

converter.appliance_logs_dir = logs
converter.appliance_logs_name = appliance_logs.zip
converter.project_logs_dir = Support
converter.project_logs_name = project_%s_logs.zip

converter.start_server = true

# XXX: Or maybe /var/cache?
cache_dir = /tmp/taf/cache
beaker.session.key = converter
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# XXX No SQLAlchemy database URL defined by default for appliance;
# the init script should be setting it dynamically.

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
# XXX MUSTFIX: Disable for beta/release.
#set debug = false


# Logging configuration
[loggers]
keys = root, routes, converter, syscfg, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_converter]
level = DEBUG
handlers =
qualname = converter

[logger_syscfg]
level = DEBUG
handlers =
qualname = syscfg

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %H:%M:%S
